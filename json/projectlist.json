[
  {
    "ID": "roller-coaster",
    "shortName": "Roller Coaster",
    "title": "OpenGL Roller Coaster",
    "subtitle": "CS324: Computer Graphics",
    "date": "December 2018 - January 2019",
    "languages": ["C++", "OpenGL"],
    "description": "A simulation of a 3-car roller coaster which traverses a small track featuring a lift hill, drop, loop-the-loop and turns. The coaster can be viewed from a first-person perspective in each of the carts, as well as additional views that follow the carts round the track.",
    "image": "images/coaster1.png",
    "alt": "OpenGL Roller coaster",
    "disabled": true,
    "github": null,
    "live": null,
    "categories": {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "rscbot",
    "shortName": "RSCBot",
    "title": "RSCBot",
    "subtitle": "CS261: Software Engineering Group Project",
    "date": "February 2018 - March 2018",
    "languages": ["JavaScript", "jQuery", "PHP", "HTML", "CSS", "Materialize", "SQL", "MySQL"],
    "description": "A specialised, personalisable Trader ChatBot that can fetch data and current news on stocks and sectors from the FTSE 100 index. Our ChatBot communicates with the user in a natural way, and has been designed to identify and adapt to the userâ€™s main interests in the stock market, making for a more personal trading experience.",
    "image": "images/rscbot3.png",
    "alt": "RSCBot",
    "disabled": false,
    "github": null,
    "live": null,
    "categories": {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "scratch-clone",
    "shortName": "Scratch Clone",
    "title": "Scratch Clone",
    "subtitle": "CS256: Functional Programming",
    "date": "December 2017",
    "languages": ["Haskell"],
    "description": "A Haskell project which handles the evaluation of user constructed scratch-like programs on a web-based interface. Uses Monads to evaluate statements such as binary operations, if statements, case statements, iterative statements and simple memory handling.",
    "image": null,
    "alt": "Scratch Clone",
    "disabled": true,
    "github": null,
    "live": null,
    "categories": {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "cs256",
    "shortName": "Database Analysis",
    "title": "Department Store Database Analysis",
    "subtitle": "CS258: Database Systems",
    "date": "November 2017",
    "languages": ["Java", "SQL"],
    "description": "A database system for a department store that stores the inventory, orders, collections, deliveries and staff. The system allows staff to create in-store purchases, collections and deliveries, review the biggest selling products, calculate staff life-time success, staff contribution and candidates for employee of the year all using SQL queries. Input is carefully santised and validated before the SQL query is constructed.",
    "image": null,
    "alt": "Database Analysis",
    "disabled": true,
    "github": null,
    "live": null,
    "categories": {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "cs241",
    "shortName": "Packet Sniffer",
    "title": "Multi-Threaded Packet Sniffer",
    "subtitle": "CS241: Operating Systems and Computer Networks",
    "date": "November 2017",
    "languages": ["C"],
    "description": "Packet sniffer that can detect and analyse Ethernet, ARP, IPv4 and TCP packets. Can also detect intrusions such as: Xmas tree scans, ARP poisoning and blacklisted URLs. Packets are analysed concurrently using a thread pool of a maximum of 10 threads.",
    "image": null,
    "alt": "Packet Sniffer",
    "disabled": true,
    "github": null,
    "live": null,
    "categories": {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "mastermind",
    "shortName": "Mastermind",
    "title": "Mastermind",
    "subtitle": "CS256: Functional Programming",
    "date": "October 2017",
    "languages": ["Haskell"],
    "description": "A Haskell console program that simulates a player vs computer game of the board-game Mastermind. The computer was made to solve a game in 5 moves or less utilising Knuth's mastermind algorithm. This project is my first using a functional programming language.",
    "image": "images/mastermind1.png",
    "alt": "Mastermind",
    "disabled": false,
    "github": null,
    "live": null,
    "categories": {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "url-shortener",
    "shortName": "URL Shortener",
    "title": "URL Shortener",
    "subtitle": null,
    "date": "April 2017",
    "languages": ["JavaScript", "Node.js", "jQuery","MongoDB", "HTML", "CSS", "Materialize"],
    "description": "A URL shortening tool creating using the Node.js framework, Express.js for routing GET and POST requests and MongoDB to store URLs. The project is my first using all three of these technologies. Long URLs are stored in the database and the ID is encoded and used as the short URL.",
    "image": "images/url-shortener1.png",
    "alt": "URL Shortener",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 0, "per": 1, "web": 1}
  },
  {
    "ID": "graph-algorithm-visualiser",
    "shortName": "Graph Visualiser",
    "title": "Graph Algorithm Visualiser",
    "subtitle": null,
    "date": "April 2017",
    "languages": ["JavaScript"],
    "description": "A visualiser which displays the process of graph algorithms on complete graphs such as: Prim's, Kruskal's, Graham Scan, Nearest Neighbour and 2-Opt.  The project was primarily a learning tool to help me improve my ability using JavaScript and better understand graph algorithms.",
    "image": "images/graph-visualiser1.png",
    "alt": "Graph Algorithm Visualiser",
    "disabled": false,
    "github": "https://github.com/KyleGough/graph-algorithm-visualiser",
    "live" : "graph-algorithm-visualiser/",
    "categories" : {"uni": 0, "per": 1, "web": 1}
  },
  {
    "ID": "cavern-minesweeper",
    "shortName": "Cavern Minesweeper",
    "title": "Cavern Minesweeper",
    "subtitle": null,
    "date": "March 2017",
    "languages": ["Ruby"],
    "description": "The project served as a tool for teaching me Ruby. It is my first Ruby program. Cavern Minesweeper is based off of Minesweeper but with tiered ores (mines) which can only be mined if the player has levelled up enough. The player can level up by mining ores of lower or the same tier as the player.",
    "image": "images/cavern-minesweeper1.png",
    "alt": "Cavern Minesweeper",
    "disabled": false,
    "github": "https://github.com/KyleGough/cavern-minesweeper",
    "live" : null,
    "categories" : {"uni": 0, "per": 1, "web": 0}
  },
  {
    "ID": "bsplit",
    "shortName": "BSplit",
    "title": "BSplit",
    "subtitle": "CS139: Web Development Technologies Coursework",
    "date": "February 2017 - March 2017",
    "languages": ["PHP", "JavaScript", "jQuery", "SQL", "SQLite", "HTML", "CSS", "Bootstrap"],
    "description": "BSplit is a web application that allows registered users to split payments between parties. The app allows users to create and settle payments between parties. The app's dashboard utilises AJAX requests to prevent web page reloading to enchance user experience. Dashboard and Email notifications are sent when a new bill or group is created.",
    "image": "images/bsplit-homepage.png",
    "alt": "BSplit - Homepage",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 1}
  },
  {
    "ID": "portfolio",
    "shortName": "Portfolio",
    "title": "Portfolio",
    "subtitle": null,
    "date": "December 2016 - Current",
    "languages": ["PHP", "JavaScript", "jQuery", "HTML", "CSS", "Sass", "Bootstrap", "Materialize"],
    "description": "Website created to showcase my programming projects and learning progression with different technologies.",
    "image": "images/portfolio1.png",
    "alt": "Portfolio",
    "disabled": false,
    "github": "https://github.com/KyleGough/portfolio",
    "live" : null,
    "categories" : {"uni": 0, "per": 1, "web": 1}
  },
  {
    "ID": "witter",
    "shortName": "Witter",
    "title": "Witter",
    "subtitle": "CS126: Design of Information Structures Coursework",
    "date": "February 2017 - March 2017",
    "languages": ["Java"],
    "description": "Implemented various data structures to store Users, Weets and Folowers for a fictional Twitter clone called 'Witter'. Implemented a Red-Black tree, Minimum heap, Hash table and Linked list.",
    "image": "images/witter1.png",
    "alt": "Witter",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "todo-list",
    "shortName": "To Do List",
    "title": "To Do List",
    "subtitle": "CS139: Web Development Technologies Lab Work",
    "date": "January 2017 - February 2017",
    "languages": ["PHP", "JavaScript", "jQuery", "SQL", "SQLite", "HTML", "CSS"],
    "description": "Created a To Do List Web application where users can signup and create their own lists. Learned and integrated PHP and SQL to store and query user's lists. Protected the application from SQL injection and Cross-Site scripting.",
    "image": "images/todolist1.png",
    "alt": "To Do List Homepage",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 1}
  },
  {
    "ID": "tic-tac-toe",
    "shortName": "Tic Tac Toe",
    "title": "Tic Tac Toe Web App",
    "subtitle": null,
    "date": "January 2017 - February 2017",
    "languages": ["JavaScript", "HTML", "CSS"],
    "description": "Interactive Tic-Tac-Toe game with Single-player and Two-player modes. First experience with JavaScript. Three AI difficulties: Easy, Medium and Impossible. Two-Player mode.",
    "image": "images/tictactoe2.png",
    "alt": "Tic Tac Toe Game",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 0, "per": 1, "web": 1}
  },
  {
    "ID": "cs140",
    "shortName": "Virtual Machine",
    "title": "Virtual Machines and Secure Email",
    "subtitle": "CS140: Computer Security Coursework",
    "date": "January 2017 - February 2017",
    "languages": ["Bash"],
    "description": "Set up and identified security defects in a Linux Virtual Machine and Apache web server. Sent and received secure email using GnuPG and Thunderbird.",
    "image": "images/bash1.png",
    "alt": "Terminal",
    "disabled": true,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "steganography",
    "shortName": "Steganography",
    "title": "Steganography Embedder and Extractor",
    "subtitle": null,
    "date": "December 2016 - January 2017",
    "languages": ["Java"],
    "description": "Steganography tool for hiding and extracting files within PNG files. Uses the least significant bit algorithm to embed message files. Analyses the available space within the carrier image. Detects the extracted file's MIME type.",
    "image": "images/steg1.png",
    "alt": "Steganography",
    "disabled": false,
    "github": "https://github.com/KyleGough/png-steganography",
    "live" : null,
    "categories" : {"uni": 0, "per": 1, "web": 0}
  },
  {
    "ID": "cs133",
    "shortName": "Linux Guide",
    "title": "Linux Reference Guide, Shell Scripts & Lab Diary",
    "subtitle": "CS133: Professional Skills Coursework",
    "date": "October 2016 - January 2017",
    "languages": ["LaTeX", "Bash", "HTML", "CSS"],
    "description": "Wrote a Linux Reference Guide using LaTeX for beginners of Linux. Created Bash Scripts for directory analysis. Designed and created an online lab diary of my progress whilst using Linux, Bash, LaTeX and Git. Achieved 100% on the coursework.",
    "image": "images/labdiary1.png",
    "alt": "Lab Diary",
    "disabled": true,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 1}
  },
  {
    "ID": "cs132",
    "shortName": "3D Printer",
    "title": "3D Printer",
    "subtitle": "CS132: Computer Organisation and Architecture Coursework",
    "date": "November 2016 - December 2016",
    "languages": ["C"],
    "description": "Created a C program to move a 3D Printer's nozzle to create 3D shapes. Built upon simple 2D shapes to create more complex 3D shapes. Produced a report containing the development stages from analysis and design to implementation, testing and evaluation.",
    "image": "images/3dprinter1.jpg",
    "alt": "3D Printed Cube",
    "disabled": true,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "robot-maze",
    "shortName": "Robot Maze",
    "title": "Robot Maze",
    "subtitle": "CS118: Programming for Computer Scientists Coursework",
    "date": "October 2016 - December 2016",
    "languages": ["Java"],
    "description": "Wrote program using Java which controls a robot through a maze. Developed implementations utilising a Stack ADT, depth-first search and Tremaux's algorithm. Final implementation worked on mazes with multiple loops and reached the end quicker on the second run using data from the first run. Achieved 100% on the coursework.",
    "image": "images/robotmaze1.png",
    "alt": "Robot Maze",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 1, "per": 0, "web": 0}
  },
  {
    "ID": "route-planner",
    "shortName": "Route Planner",
    "title": "Delivery Route Planner",
    "subtitle": "A-Level Computing Coursework",
    "date": "December 2015 - March 2016",
    "languages": ["C#", "SQL", "Access SQL"],
    "description": "Created software in C# which creates an efficient route between multiple delivery locations. Used SQL to store and query data on products, clients and their deliveries. Produced a report which communicates the route, all items in the deliveries and the estimated time. Used graph algorithms such as Dijkstra's & Nearest Neighbour with 2-Opt to optimise the route.",
    "image": "images/route1.png",
    "alt": "Delivery Route Planner",
    "disabled": false,
    "github": null,
    "live" : null,
    "categories" : {"uni": 0, "per": 0, "web": 0}
  },
  {
    "ID": "sorting-visualiser",
    "shortName": "Sorting Visualiser",
    "title": "Sorting Algorithm Visualiser",
    "subtitle": null,
    "date": "September 2015 - November 2015",
    "languages": ["C#"],
    "description": "Visualises the sorting process on a dataset, highlights swapping and sorted elements in real-time. Supports 20 sorting algorithms including: Bubble & Quicksort. Options to change size of datasets, range of numbers in the dataset and delay. Ability to compare and visualise two sorting algorithms concurrently. Supports 18 types of start data including: Random, Normal Distribution, Sawtooth and Structured.",
    "image": "images/sort1.png",
    "alt": "Sorting Visualiser",
    "disabled": false,
    "github": "https://github.com/KyleGough/sorting-algorithm-visualiser",
    "live" : null,
    "categories" : {"uni": 0, "per": 1, "web": 0}
  }
]
